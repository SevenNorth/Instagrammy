{
  "name": "从零开始用 Express + MongoDB 搭建图片分享社区",
  "description": "在这篇教程中，我们将用 Node.js 中最流行的 Express 框架搭建一个类似 Instagram 的图片分享社区，数据库选用 MongoDB。本教程的代码改编自 Mithun Satheesh，Bruno Joseph D'mello 和 Jason Krol 的《Web Development with MongoDB and NodeJS: Second Edition》一书。",
  "id": "69b697ed0cd9f890a636c9c78eb2ce0c",
  "github": "https://github.com/mRcfps/Instagrammy",
  "created": "2019-10-16T00:00:00.509Z",
  "topics": [
    "Express",
    "MongoDB"
  ],
  "categories": [
    "后端",
    "Node.js",
    "进阶"
  ],
  "articles": [
    {
      "name": "从零开始用 Express + MongoDB 搭建图片分享社区（一）",
      "description": "Node.js 已经成为服务器端开发的主流选择之一，而 Express 则是 Node 平台最耀眼的那个框架。在这篇教程中，我们将用 Node.js 中最流行的 Express 框架搭建一个类似 Instagram 的图片分享社区，数据库选用 当今颇受欢迎的非关系型数据库 MongoDB。本教程的代码改编自 Mithun Satheesh，Bruno Joseph D'mello 和 Jason Krol 的《Web Development with MongoDB and NodeJS: Second Edition》一书。",
      "id": "a0531f0"
    },
    {
      "name": "从零开始用 Express + MongoDB 搭建图片分享社区（二）",
      "description": "在本系列教程的第二部分中，我们将接入 MongoDB 数据库，并由此实现围绕图片、评论的功能。",
      "id": "29f41c0"
    }
  ],
  "steps": [
    {
      "commit": "f50be54",
      "id": "euzvfWcU",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "f50be54",
          "id": "QJ0sekb-q",
          "fixed": true,
          "children": [
            {
              "text": "初始化项目结构"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "note",
              "level": "primary",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "此教程属于"
                    },
                    {
                      "link": true,
                      "url": "https://tuture.co/roadmaps/node/",
                      "text": "Node.js 后端工程师学习路线"
                    },
                    {
                      "text": "的一部分，点击可查看全部内容。"
                    }
                  ]
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "type": "file",
          "file": ".gitignore",
          "id": "m5S7n4SHu",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": ".gitignore",
              "commit": "f50be54",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "Rl4V0YYE-",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "f50be54",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "file": "package.json",
          "display": true,
          "commit": "f50be54",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先我们创建项目目录，并初始化 npm："
                    }
                  ]
                },
                {
                  "type": "code-block",
                  "lang": "bash",
                  "children": [
                    {
                      "type": "code-line",
                      "children": [
                        {
                          "text": "$ mkdir Instagrammy && cd Instagrammy"
                        }
                      ]
                    },
                    {
                      "type": "code-line",
                      "children": [
                        {
                          "text": "$ npm init"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "添加 express 的项目依赖："
                    }
                  ]
                },
                {
                  "type": "code-block",
                  "lang": "bash",
                  "children": [
                    {
                      "type": "code-line",
                      "children": [
                        {
                          "text": "$ npm install express"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最终生成的 package.json 文件如下："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "f50be54",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server.js",
          "display": true,
          "commit": "f50be54",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后编写服务器的入口文件 "
                    },
                    {
                      "code": true,
                      "text": "server.js"
                    },
                    {
                      "text": "，内容如下："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server.js",
              "commit": "f50be54",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "BCCSdFmGo",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "f50be54",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "通过 "
                },
                {
                  "code": true,
                  "text": "node server.js"
                },
                {
                  "text": " 运行 server.js 文件，然后在浏览器中访问 "
                },
                {
                  "link": true,
                  "url": "http://localhost:3000",
                  "text": "http://localhost:3000"
                },
                {
                  "text": "，便可以看到服务器的返回的 Hello World："
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "image",
                  "url": ".tuture/assets/figure-1.png",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "commit": "f17c971",
      "id": "DTmPUdm9L",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "f17c971",
          "id": "bYJmvJUZ5",
          "fixed": true,
          "children": [
            {
              "text": "配置中间件"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Express 本身是一个非常简洁的 web 框架，但是通过中间件这一设计模式，能够实现非常丰富的功能。一个 Express 中间件本质上是一个函数："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "js",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "function someMiddleware(req, res, next) {}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "code": true,
                  "text": "req"
                },
                {
                  "text": " 参数是一个 "
                },
                {
                  "code": true,
                  "text": "express.Request"
                },
                {
                  "text": " 对象，封装了用户请求；"
                },
                {
                  "code": true,
                  "text": "res"
                },
                {
                  "text": " 参数则是一个 "
                },
                {
                  "code": true,
                  "text": "express.Response"
                },
                {
                  "text": " 对象，封装了即将返回给用户的响应；"
                },
                {
                  "code": true,
                  "text": "next"
                },
                {
                  "text": " 则是在执行完所有逻辑后用于触发下一个中间件的函数。"
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "添加中间件的代码则非常简单："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "js",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "app.use(middlewareA);"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "app.use(middlewareB);"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "app.use(middlewareC);"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "中间件 A、B、C 将会在处理每次请求时"
                },
                {
                  "italic": true,
                  "bold": true,
                  "text": "按顺序执行"
                },
                {
                  "text": "（这也意味着中间件的顺序是非常重要的）。接下来我们将添加以下基础中间件（也是几乎所有应用都会用到的中间件）："
                }
              ]
            },
            {
              "type": "bulleted-list",
              "children": [
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "morgan"
                    },
                    {
                      "text": "：用于记录日志的中间件，对于开发调试和生产监控都很有用；"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "bodyParser"
                    },
                    {
                      "text": "：用于解析客户端请求的中间件，包括 HTML 表单和 JSON 请求；"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "methodOverride"
                    },
                    {
                      "text": "：为老的浏览器提供 REST 请求的兼容性支持；"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "cookieParser"
                    },
                    {
                      "text": "：用于收发 cookie；"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "errorHandler"
                    },
                    {
                      "text": "：用于在发生错误时打印调用栈，"
                    },
                    {
                      "italic": true,
                      "bold": true,
                      "text": "仅在开发时使用"
                    },
                    {
                      "text": "；"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "handlebars"
                    },
                    {
                      "text": "：用于渲染用户界面的模板引擎，会在后面细讲。"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "我们通过 npm 安装这些中间件："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ npm install express-handlebars body-parser cookie-parser morgan method-override errorhandler"
                    }
                  ]
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "Uz8f_IXgO",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "f17c971",
              "hiddenLines": [
                [
                  6,
                  17
                ],
                [
                  42,
                  52
                ],
                [
                  84,
                  95
                ],
                [
                  118,
                  124
                ],
                [
                  139,
                  152
                ],
                [
                  168,
                  208
                ],
                [
                  227,
                  244
                ],
                [
                  295,
                  308
                ],
                [
                  324,
                  337
                ],
                [
                  365,
                  381
                ],
                [
                  413,
                  416
                ],
                [
                  444,
                  445
                ],
                [
                  497,
                  573
                ],
                [
                  585,
                  597
                ],
                [
                  614,
                  621
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "3HJVuXA6R",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "f17c971",
              "hiddenLines": [
                [
                  0,
                  8
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "file": "server/configure.js",
          "display": true,
          "commit": "f17c971",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "创建 server 目录，在其中添加 configure.js 模块，用于配置所有的中间件："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server/configure.js",
              "commit": "f17c971",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "值得一提的是，除了上面提到的中间件，我们还用到了 express 自带的静态资源中间件 "
                    },
                    {
                      "code": true,
                      "text": "express.static"
                    },
                    {
                      "text": "，用于向客户端发送图片、CSS等静态文件。最后，我们通过获取 "
                    },
                    {
                      "code": true,
                      "text": "env"
                    },
                    {
                      "text": " 变量来判断是否处于开发环境，如果是的话就添加 "
                    },
                    {
                      "code": true,
                      "text": "errorHandler"
                    },
                    {
                      "text": " 以便于调试代码。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server.js",
          "display": true,
          "commit": "f17c971",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在 server.js 中调用刚才用于配置中间件的代码："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server.js",
              "commit": "f17c971",
              "hiddenLines": [
                [
                  8,
                  13
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "dllteymBW",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "f17c971",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": ""
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "commit": "5313abe",
      "id": "SRaw1wdCB",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "5313abe",
          "id": "EicQofbsI",
          "fixed": true,
          "children": [
            {
              "text": "搭建路由和控制器"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "现在我们已经配置好了基础的中间件，但是只有主页（URL 为 "
                },
                {
                  "code": true,
                  "text": "/"
                },
                {
                  "text": "）可以访问。接下来我们将实现以下路由："
                }
              ]
            },
            {
              "type": "bulleted-list",
              "children": [
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "GET /"
                    },
                    {
                      "text": "：网站主页"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "GET /images/image_id"
                    },
                    {
                      "text": "：展示单张图片"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "POST /images"
                    },
                    {
                      "text": "：上传图片"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "POST /images/image_id/like"
                    },
                    {
                      "text": "：点赞图片"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                },
                {
                  "type": "list-item",
                  "children": [
                    {
                      "code": true,
                      "text": "POST /images/image_id/comment"
                    },
                    {
                      "text": "：评论图片"
                    }
                  ],
                  "parent": "bulleted-list",
                  "level": 0
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "虽然 Express 的项目结构没有固定的套路，但是我们将采用经典的 MVC 模式（即 Model View Controller）来搭建我们的项目。Model 定义了数据模型，View 定义了用户界面，而 Controller 则定义了相应的业务逻辑。"
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "file": "controllers/home.js",
          "display": true,
          "commit": "5313abe",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先创建 controllers 目录，在其中创建 home.js 文件，并定义 "
                    },
                    {
                      "code": true,
                      "text": "index"
                    },
                    {
                      "text": " 控制器如下："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/home.js",
              "commit": "5313abe",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "每个控制器实际上都是一个 Express 中间件（只不过不需要 "
                    },
                    {
                      "code": true,
                      "text": "next"
                    },
                    {
                      "text": " 函数，因为是最后一个中间件）。这里我们暂时用 "
                    },
                    {
                      "code": true,
                      "text": "res.send"
                    },
                    {
                      "text": " 发一条文字来代表这个 controller 已经实现。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "controllers/image.js",
          "display": true,
          "commit": "5313abe",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "再在 controllers 目录下创建 image.js，实现与图片处理相关的控制器："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "5313abe",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server/routes.js",
          "display": true,
          "commit": "5313abe",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后在 server 目录下创建路由模块 routes.js，建立从 URL 到控制器之间的映射："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server/routes.js",
              "commit": "5313abe",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "这里我们用到了 Express 自带的路由类 "
                    },
                    {
                      "code": true,
                      "text": "Router"
                    },
                    {
                      "text": "，可以很方便地定义路由，并且 "
                    },
                    {
                      "code": true,
                      "text": "Router"
                    },
                    {
                      "text": " 本身也是一个中间件，可以直接通过 "
                    },
                    {
                      "code": true,
                      "text": "app.use"
                    },
                    {
                      "text": " 进行配置。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server/configure.js",
          "display": true,
          "commit": "5313abe",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接着在 server/configure.js 模块中调用路由模块。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server/configure.js",
              "commit": "5313abe",
              "hiddenLines": [
                [
                  0,
                  5
                ],
                [
                  14,
                  19
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server.js",
          "display": true,
          "commit": "5313abe",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后我们去掉 server.js 中原来的首页路由。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server.js",
              "commit": "5313abe",
              "hiddenLines": [
                [
                  0,
                  3
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "cbckqR0jKd",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "5313abe",
              "hiddenLines": [
                [
                  0,
                  35
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "到了这一步，我们运行服务器，打开浏览器访问 "
                },
                {
                  "link": true,
                  "url": "http://localhost:3000",
                  "text": "http://localhost:3000"
                },
                {
                  "text": "，可以看到 "
                },
                {
                  "code": true,
                  "text": "The home:index controller"
                },
                {
                  "text": " 的信息；访问 "
                },
                {
                  "link": true,
                  "url": "http://localhost:3000/test123",
                  "text": "http://localhost:3000/test123"
                },
                {
                  "text": "，则是 "
                },
                {
                  "code": true,
                  "text": "The image:index controller test123"
                },
                {
                  "text": "。进一步，我们还可以通过 Postman 或者 curl 等工具测试 POST 方法的 controller 是否可用。下面以 curl 为例测试 "
                },
                {
                  "code": true,
                  "text": "POST /images"
                },
                {
                  "text": "："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ curl -X POST localhost:3000/images"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "The image:create POST controller"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "一切顺利！到这里可以泡杯茶好好犒劳一下自己了~"
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "commit": "d56de92",
      "id": "GrClKRf8Gh",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "d56de92",
          "id": "FKfzoEDsMi",
          "fixed": true,
          "children": [
            {
              "text": "配置 handlebars 模板引擎"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "这一步，我们将开始实现 MVC 中的 V，即 View，用户界面。"
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "首页的效果如下图所示："
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "image",
                  "url": ".tuture/assets/figure-2.png",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "图片详情的效果如下图所示："
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "image",
                  "url": ".tuture/assets/figure-3.png",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "尽管如今前后端分离已经是大势所趋，但是通过模板引擎在服务器端渲染页面也是有用武之地的，特别是快速地开发一些简单的应用。在模板引擎中，"
                },
                {
                  "link": true,
                  "url": "http://handlebarsjs.com/",
                  "text": "Handlebars"
                },
                {
                  "text": " 和 "
                },
                {
                  "link": true,
                  "url": "https://pugjs.org/api/getting-started.html",
                  "text": "Pug"
                },
                {
                  "text": " 当属其中的佼佼者。由于 Handlebars 和普通的 HTML 文档几乎完全一致，容易上手，因此这篇教程中我们选用 Handlebars，并且选用 Bootstrap 样式。"
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "与普通的 HTML 文档相比，模板最大的特点即在于提供了数据的接入。例如 handlebars，可以在双花括号 "
                },
                {
                  "code": true,
                  "text": "{{}}"
                },
                {
                  "text": " 之间填写任何数据，当服务器渲染页面时只需传入相应的数据即可渲染成对应的内容。除此之外，handlebars 还支持条件语法、循环语法和模板嵌套等高级功能，下面将详细描述。"
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "我们创建一个 views 目录，用于存放所有的模板代码。views 目录的结构如下所示："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "views"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "├── image.handlebars"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "├── index.handlebars"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "├── layouts"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "│   └── main.handlebars"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "└── partials"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "    ├── comments.handlebars"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "    ├── popular.handlebars"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "    └── stats.handlebars"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "其中 image.handlebars 和 index.handlebars 是"
                },
                {
                  "italic": true,
                  "bold": true,
                  "text": "页面模板"
                },
                {
                  "text": "，layouts/main.handlebars 则是整个网站的"
                },
                {
                  "italic": true,
                  "bold": true,
                  "text": "布局模板"
                },
                {
                  "text": "（所有页面共享），partials 目录则用于存放页面之间共享的"
                },
                {
                  "italic": true,
                  "bold": true,
                  "text": "组件模板"
                },
                {
                  "text": "，例如评论、数据等等。"
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "file": "views/layouts/main.handlebars",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先完成布局模板 layouts/main.handlebars："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/layouts/main.handlebars",
              "commit": "d56de92",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "main.handlebars 本身是一个完整的 HTML 文档，包括 "
                    },
                    {
                      "code": true,
                      "text": "head"
                    },
                    {
                      "text": " 和 "
                    },
                    {
                      "code": true,
                      "text": "body"
                    },
                    {
                      "text": " 部分。在 "
                    },
                    {
                      "code": true,
                      "text": "head"
                    },
                    {
                      "text": " 部分，我们定义了网站的一些元数据，还加入了 Bootstrap 的 CDN 链接；在 "
                    },
                    {
                      "code": true,
                      "text": "body"
                    },
                    {
                      "text": " 部分，包含两个容器：网站头部（header）和每个页面的自定义内容（即"
                    },
                    {
                      "code": true,
                      "text": "{{{body}}}"
                    },
                    {
                      "text": " ）。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/index.handlebars",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接下来编写 index.handlebars，即主页内容。这里我们暂时先写上一个大标题："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/index.handlebars",
              "commit": "d56de92",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/image.handlebars",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "还有 image.handlebars，即图片详情页面内容："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/image.handlebars",
              "commit": "d56de92",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "index.handlebars 和 image.handlebars 的内容将替换布局模板中的 "
                    },
                    {
                      "code": true,
                      "text": "{{{body}}}"
                    },
                    {
                      "text": " 部分。在用户访问某个页面时，页面内容 = "
                    },
                    {
                      "italic": true,
                      "bold": true,
                      "text": "布局模板+页面模板"
                    },
                    {
                      "text": "。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "controllers/home.js",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "模板写好之后，我们修改控制器相应的代码，通过 "
                    },
                    {
                      "code": true,
                      "text": "res.render"
                    },
                    {
                      "text": " 函数渲染模板："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/home.js",
              "commit": "d56de92",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "code": true,
                      "text": "render"
                    },
                    {
                      "text": " 函数接受一个字符串参数，即页面模板的名称。例如 "
                    },
                    {
                      "code": true,
                      "text": "index.handlebars"
                    },
                    {
                      "text": " 的名称即为 "
                    },
                    {
                      "code": true,
                      "text": "index"
                    },
                    {
                      "text": "。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "controllers/image.js",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "同样地，我们修改 image 控制器的代码："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "d56de92",
              "hiddenLines": [
                [
                  7,
                  14
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "server/configure.js",
          "display": true,
          "commit": "d56de92",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后，不要忘记在 server/configure.js 模块中配置 handlebars 中间件："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server/configure.js",
              "commit": "d56de92",
              "hiddenLines": [
                [
                  0,
                  8
                ],
                [
                  18,
                  28
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "kb8niJZM_w",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "d56de92",
              "hiddenLines": [
                [
                  0,
                  46
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "大功告成！现在运行服务器，分别访问主页（"
                },
                {
                  "link": true,
                  "url": "http://localhost:3000",
                  "text": "http://localhost:3000"
                },
                {
                  "text": "）和图片详情页面（"
                },
                {
                  "link": true,
                  "url": "http://localhost:3000/images/test",
                  "text": "http://localhost:3000/images/test"
                },
                {
                  "text": "），可以看到完整的页面（虽然没有数据），包括所有页面共享的头部和每个页面的自定义内容。"
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "commit": "3b969d1",
      "id": "QjyyjJqEbZ",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "3b969d1",
          "id": "3lxxnH7Go8",
          "fixed": true,
          "children": [
            {
              "text": "完善界面代码"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "在上面一步的基础上，我们将继续完善模板代码。"
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "l7CQXb3nGV",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "3b969d1",
              "hiddenLines": [
                [
                  0,
                  78
                ],
                [
                  94,
                  94
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "file": "views/index.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先是在 index.handlebars 中添加上传图片的表单和展示最新图片的容器。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/index.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在展示最新图片时，我们用到了 handlebars 提供的循环语法（第 46 行到 53 行）。对于传入模板的数据对象 "
                    },
                    {
                      "code": true,
                      "text": "images"
                    },
                    {
                      "text": " 进行遍历，每个循环中可以访问单个 "
                    },
                    {
                      "code": true,
                      "text": "image"
                    },
                    {
                      "text": " 的全部属性，例如 "
                    },
                    {
                      "code": true,
                      "text": "uniqueId"
                    },
                    {
                      "text": " 等等。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/image.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接着完善 image.handlebars 的内容，包括展示图片的详细内容、发表评论的表单和展示所有评论的容器。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/image.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在展示所有评论的代码中，我们同样用到了 handlebars 的循环语法，非常方便。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/partials/stats.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后，我们将分别实现网站右边栏中的统计数据、最受欢迎图片和最新评论组件。首先是统计数据组件模板："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/partials/stats.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "可以看出组件模板和页面模板并没有什么不同，都是一些 HTML 代码再加上数据接口。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/partials/popular.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "再分别实现最受欢迎图片组件（popular.handlebars）和最新评论组件（comments.handlebars）。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/partials/popular.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/partials/comments.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/partials/comments.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/layouts/main.handlebars",
          "display": true,
          "commit": "3b969d1",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后，我们在布局模板 layouts/main.handlebars 中加入所有组件模板，加入模板的语法为 "
                    },
                    {
                      "code": true,
                      "text": "{{> component this}}"
                    },
                    {
                      "text": "。除此之外，由于我们用到了一些小图标，所以加上 font-awesome 的链接。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/layouts/main.handlebars",
              "commit": "3b969d1",
              "hiddenLines": [
                [
                  0,
                  3
                ],
                [
                  11,
                  18
                ],
                [
                  30,
                  31
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "在实际开发中，我们可能经常需要调整页面代码。在修改并保存模板后，只需刷新浏览器即可看到界面的变化（但是如果修改服务器代码则需要重新运行服务器）。"
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "commit": "eecc3e5",
      "id": "VKb0oErP7m",
      "articleId": "a0531f0",
      "type": "step",
      "children": [
        {
          "type": "heading-two",
          "commit": "eecc3e5",
          "id": "Q_JJyhKNhC",
          "fixed": true,
          "children": [
            {
              "text": "将数据传入模板视图"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "如果没有数据传入，那么模板相应的数据部分将全都是空白。在这一步中，我们将用一些假数据来演示如何从控制器将数据传入模板视图。"
                }
              ]
            }
          ],
          "flag": "step_start"
        },
        {
          "file": "controllers/home.js",
          "display": true,
          "commit": "eecc3e5",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先在 home 控制器中构造一个 "
                    },
                    {
                      "code": true,
                      "text": "viewModel"
                    },
                    {
                      "text": " 对象，并在 "
                    },
                    {
                      "code": true,
                      "text": "render"
                    },
                    {
                      "text": " 函数中作为第二参数传入。可以看到 "
                    },
                    {
                      "code": true,
                      "text": "viewModel"
                    },
                    {
                      "text": " 对象与模板中的数据接口是完全一致的。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/home.js",
              "commit": "eecc3e5",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "controllers/image.js",
          "display": true,
          "commit": "eecc3e5",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "同理实现 image 控制器。"
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  34,
                  41
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "SUzw4aWKdn",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  393
                ],
                [
                  405,
                  641
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "rkVzjil8yE",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  14
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "file": "server/configure.js",
          "display": true,
          "commit": "eecc3e5",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在传入数据时，我们可以自定义一些 helper 函数在模板中使用。例如 timestamp 时间戳，"
                    },
                    {
                      "code": true,
                      "text": "Date.now()"
                    },
                    {
                      "text": " 返回的是一串数字，显然用户体验很不友好，因此我们需要将其转换为方便用户阅读的时间，例如“几秒前”“两小时前”。这里我们选用 JavaScript 最流行的处理时间的库 "
                    },
                    {
                      "link": true,
                      "url": "http://momentjs.cn/",
                      "text": "moment.js"
                    },
                    {
                      "text": "，并通过 npm 安装："
                    }
                  ]
                },
                {
                  "type": "code-block",
                  "lang": "bash",
                  "children": [
                    {
                      "type": "code-line",
                      "children": [
                        {
                          "text": "$ npm install moment"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后在 server/configure.js 中配置 handlebars 的 helper 函数 "
                    },
                    {
                      "code": true,
                      "text": "timeago"
                    },
                    {
                      "text": "："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "server/configure.js",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  4
                ],
                [
                  30,
                  42
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "code": true,
                      "text": "timeago"
                    },
                    {
                      "text": " 函数能够在模板中使用，将原始的 UNIX 时间戳转换为易于理解的中文时间戳。"
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "7X4nZOPPLM",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  94
                ],
                [
                  111,
                  112
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "file": "views/image.handlebars",
          "display": true,
          "commit": "eecc3e5",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接着在相应用到时间戳的地方加入 "
                    },
                    {
                      "code": true,
                      "text": "timeago"
                    },
                    {
                      "text": " 函数："
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/image.handlebars",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  16
                ],
                [
                  25,
                  80
                ],
                [
                  89,
                  91
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "file": "views/partials/comments.handlebars",
          "display": true,
          "commit": "eecc3e5",
          "type": "file",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_start"
            },
            {
              "type": "diff-block",
              "file": "views/partials/comments.handlebars",
              "commit": "eecc3e5",
              "hiddenLines": [
                [
                  0,
                  11
                ],
                [
                  20,
                  22
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ],
              "flag": "file_end"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "至此，本系列教程的第一部分就已经完成了，MVC 我们实现了 V（视图）和 C （控制器）。在后续教程中，我们将接入 MongoDB 数据库用于网站数据的存取，并进一步实现图片上传、点赞和删除，以及添加评论等功能。"
                }
              ]
            },
            {
              "type": "note",
              "level": "primary",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "此教程属于"
                    },
                    {
                      "link": true,
                      "url": "https://tuture.co/roadmaps/node/",
                      "text": "Node.js 后端工程师学习路线"
                    },
                    {
                      "text": "的一部分，点击可查看全部内容。"
                    }
                  ]
                }
              ]
            }
          ],
          "flag": "step_end"
        }
      ]
    },
    {
      "type": "step",
      "commit": "3b592be",
      "id": "v8P4hgQ8bX",
      "articleId": "29f41c0",
      "children": [
        {
          "type": "heading-two",
          "commit": "3b592be",
          "id": "fzHp3u5vHe",
          "fixed": true,
          "children": [
            {
              "text": "实现图片上传功能"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "note",
              "level": "primary",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "此教程属于"
                    },
                    {
                      "link": true,
                      "url": "https://tuture.co/roadmaps/node/",
                      "text": "Node.js 后端工程师学习路线"
                    },
                    {
                      "text": "的一部分，点击可查看全部内容。"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "第一步，我们先实现图片上传功能。创建 "
                },
                {
                  "code": true,
                  "text": "public/upload"
                },
                {
                  "text": " 文件夹，用于存放用户上传的图片："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ mkdir -p public/upload"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "然后安装 multer 中间件用于处理文件上传："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ npm install multer"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "server/routes.js",
          "display": true,
          "id": "xn-v_ye4F6",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在 server/routes.js 模块中，我们初始化 multer 中间件，然后将其添加到上传图片的路由中（即 "
                    },
                    {
                      "code": true,
                      "text": "POST /images"
                    },
                    {
                      "text": "）："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "server/routes.js",
              "commit": "3b592be",
              "hiddenLines": [
                [
                  17,
                  17
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "上述代码有两点需要讲解："
                    }
                  ]
                },
                {
                  "type": "bulleted-list",
                  "children": [
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "text": "第 6 行，在初始化 "
                        },
                        {
                          "code": true,
                          "text": "upload"
                        },
                        {
                          "text": " 中间件时，传入 "
                        },
                        {
                          "code": true,
                          "text": "dest"
                        },
                        {
                          "text": " 选项指定保存上传文件的路径，这里我们选择在 public/upload 目录中再创建一个 temp 目录用于临时保存上传到的图片；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "text": "第 14 行，"
                        },
                        {
                          "code": true,
                          "text": "router.post"
                        },
                        {
                          "text": " 除第一个参数为 URL，后面可以跟任意多个中间件，这里我们将上传文件的中间件添加到 "
                        },
                        {
                          "code": true,
                          "text": "image.create"
                        },
                        {
                          "text": " 控制器的前面，确保先处理用户上传的文件。这里 "
                        },
                        {
                          "code": true,
                          "text": "upload.single('file')"
                        },
                        {
                          "text": " 表示只处理单个上传文件，并且字段名为 "
                        },
                        {
                          "code": true,
                          "text": "file"
                        },
                        {
                          "text": "，在后续中间件中就可以通过 "
                        },
                        {
                          "code": true,
                          "text": "req.file"
                        },
                        {
                          "text": " 进行获取。"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "关于 multer 的详细用法，可以参考其"
                    },
                    {
                      "link": true,
                      "url": "https://github.com/expressjs/multer",
                      "text": "文档"
                    },
                    {
                      "text": "。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/image.js",
          "display": true,
          "id": "rPfQ31npxY",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在配置好上传文件的中间件后，相应地在控制器中加入获取并保存图片的代码："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "3b592be",
              "hiddenLines": [
                [
                  6,
                  31
                ],
                [
                  55,
                  59
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "code": true,
                      "text": "req.file"
                    },
                    {
                      "text": " 是一个 Multer 文件对象，包括 "
                    },
                    {
                      "code": true,
                      "text": "path"
                    },
                    {
                      "text": "（上传到服务器的路径）、"
                    },
                    {
                      "code": true,
                      "text": "filename"
                    },
                    {
                      "text": "（服务器存储的文件名）和 "
                    },
                    {
                      "code": true,
                      "text": "originalname"
                    },
                    {
                      "text": "（文件初始名，即保存在客户端的文件名）等有用的属性。我截取了一张输出 "
                    },
                    {
                      "code": true,
                      "text": "req.file"
                    },
                    {
                      "text": " 所有字段的图片如下："
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "image",
                      "url": ".tuture/assets/figure-4.png",
                      "children": [
                        {
                          "text": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "这里我们通过简单的后缀匹配来判断用户上传的是否为图片，如果是，则从临时目录 "
                    },
                    {
                      "code": true,
                      "text": "tempPath"
                    },
                    {
                      "text": " 存放到上传目录 "
                    },
                    {
                      "code": true,
                      "text": "targetPath"
                    },
                    {
                      "text": " 中，否则直接删除。上传成功后，通过 "
                    },
                    {
                      "code": true,
                      "text": "res.redirect"
                    },
                    {
                      "text": " 将页面重定向到刚刚上传的图片的详情页面。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "ks6znu9pqS",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "3b592be",
              "hiddenLines": [
                [
                  0,
                  11
                ],
                [
                  23,
                  65
                ],
                [
                  86,
                  95
                ],
                [
                  142,
                  174
                ],
                [
                  186,
                  205
                ],
                [
                  221,
                  399
                ],
                [
                  411,
                  471
                ],
                [
                  493,
                  508
                ],
                [
                  530,
                  533
                ],
                [
                  545,
                  599
                ],
                [
                  611,
                  642
                ],
                [
                  660,
                  716
                ],
                [
                  733,
                  740
                ],
                [
                  752,
                  760
                ],
                [
                  772,
                  784
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "gGdAbO1WXB",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "3b592be",
              "hiddenLines": [
                [
                  0,
                  15
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "O72Alv3KzV",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "3b592be",
              "hiddenLines": [
                [
                  0,
                  31
                ],
                [
                  43,
                  112
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "step",
      "commit": "edf67b5",
      "id": "6gbjPO1apN",
      "articleId": "29f41c0",
      "children": [
        {
          "type": "heading-two",
          "commit": "edf67b5",
          "id": "BWmSOIL-tO",
          "fixed": true,
          "children": [
            {
              "text": "接入 MongoDB 数据库"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "在上一步中，我们实现了文件上传，但是有一个很糟糕的问题：我们没有去记录上传了哪些图片，还有相应的信息（例如上传时间）。当我们关闭服务器再打开时，整个网站仿佛一下子“失忆”了。解决数据持久化存储最流行的方案无疑是数据库，而 MongoDB 凭借其优异的性能、可扩展性和灵活的数据模式，从众多数据库产品中脱颖而出。并且，MongoDB 的核心功能是基于 BSON（Binary JSON）实现的，甚至提供了 JavaScript Shell，因此在 Node 社区更是深受欢迎。所以，我们也将利用 MongoDB 实现 Instagrammy 的数据持久化存储。MongoDB 可以从其"
                },
                {
                  "link": true,
                  "url": "https://www.mongodb.com/download-center/community",
                  "text": "官网"
                },
                {
                  "text": "上下载。下载并安装好之后，新打开一个终端（命令控制台），运行以下命令打开数据库（Windows 用户可以搜索 mongo.exe 并打开）："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ mongod"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "然后我们安装 Mongoose 这个 npm 包："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ npm install mongoose"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Mongoose 是 MongoDB 最流行的 ODM（Object Document Mapping，对象文档映射），使用起来要比底层的 MongoDB Node 驱动更方便。"
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "models/image.js",
          "display": true,
          "id": "gsZNSxcl31",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们首先实现图片有关的数据模型。创建 models 目录，在其中添加 image.js 模块，并添加实现 "
                    },
                    {
                      "code": true,
                      "text": "ImageSchema"
                    },
                    {
                      "text": " 的代码："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "models/image.js",
              "commit": "edf67b5",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们在第 6 行到第 13 行定义了一个 "
                    },
                    {
                      "code": true,
                      "text": "Schema"
                    },
                    {
                      "text": "，即数据对象的模式，描述了这个模型的所有字段及相应的属性。这里我们为 "
                    },
                    {
                      "code": true,
                      "text": "ImageSchema"
                    },
                    {
                      "text": " 定义了六个字段，每个字段都有其类型（必须），"
                    },
                    {
                      "code": true,
                      "text": "views"
                    },
                    {
                      "text": "、"
                    },
                    {
                      "code": true,
                      "text": "likes"
                    },
                    {
                      "text": " 和 "
                    },
                    {
                      "code": true,
                      "text": "timestamp"
                    },
                    {
                      "text": " 还有相应的默认值（可选）。除了普通字段外，我们还定义了"
                    },
                    {
                      "italic": true,
                      "bold": true,
                      "text": "虚字段"
                    },
                    {
                      "code": true,
                      "text": "uniqueId"
                    },
                    {
                      "text": "。虚字段（virtuals）和普通字段的最大区别是不会保存到数据库中，而是在每次查询时临时计算，通常用于对普通字段进行格式调整或组合。在 "
                    },
                    {
                      "code": true,
                      "text": "Schema"
                    },
                    {
                      "text": " 定义完成后，我们将其编译为名为 "
                    },
                    {
                      "code": true,
                      "text": "Image"
                    },
                    {
                      "text": " 的模型并导出，方便在控制器中进行使用。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/home.js",
          "display": true,
          "id": "TVSd4glGLJ",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接着我们在 home 控制器中调用 "
                    },
                    {
                      "code": true,
                      "text": "ImageModel"
                    },
                    {
                      "text": " 来从数据库中获取全部图片："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/home.js",
              "commit": "edf67b5",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在第 39 行中，我们用 "
                    },
                    {
                      "code": true,
                      "text": "find"
                    },
                    {
                      "text": " 方法查询图片，所有的查询方法可参考 "
                    },
                    {
                      "link": true,
                      "url": "https://cn.mongoosedoc.top/docs/queries.html",
                      "text": "Mongoose 中文文档"
                    },
                    {
                      "text": "。"
                    },
                    {
                      "code": true,
                      "text": "find"
                    },
                    {
                      "text": " 是查询多条数据记录的通用方法，其四个参数如下："
                    }
                  ]
                },
                {
                  "type": "bulleted-list",
                  "children": [
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "filter"
                        },
                        {
                          "text": "：过滤器，是一个 JavaScript 对象，例如 "
                        },
                        {
                          "code": true,
                          "text": "{ name: 'john' }"
                        },
                        {
                          "text": " 则限定返回所有名字为 john 的记录，这里我们用 "
                        },
                        {
                          "code": true,
                          "text": "{}"
                        },
                        {
                          "text": " 表示查询所有记录；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "projection"
                        },
                        {
                          "text": "（可选）：查询所返回的字段，可以是对象或字符串，我们用 "
                        },
                        {
                          "code": true,
                          "text": "{}"
                        },
                        {
                          "text": " 表示返回所有字段；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "options"
                        },
                        {
                          "text": "（可选）：查询操作的选项，用来指定查询操作的一些参数，比如我们用 "
                        },
                        {
                          "code": true,
                          "text": "sort"
                        },
                        {
                          "text": " 选项对返回结果进行排序（这里按照发布时间 "
                        },
                        {
                          "code": true,
                          "text": "timestamp"
                        },
                        {
                          "text": " 进行倒序排列，即把最新发布的放在最前面）；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "callback"
                        },
                        {
                          "text": "：回调函数，用于添加在查询完毕时的业务逻辑。"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "MongoDB 的查询灵活而强大，但这也意味着一定的学习成本。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/image.js",
          "display": true,
          "id": "WF_La_YhIO",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "进一步，我们在 image 控制器中添加数据库操作的代码："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  54,
                  57
                ],
                [
                  74,
                  85
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在 "
                    },
                    {
                      "code": true,
                      "text": "image.index"
                    },
                    {
                      "text": " 和 "
                    },
                    {
                      "code": true,
                      "text": "image.create"
                    },
                    {
                      "text": " 两个控制器中，我们分别进行了单条数据记录的查询和插入。"
                    },
                    {
                      "code": true,
                      "text": "findOne"
                    },
                    {
                      "text": " 与之前的 "
                    },
                    {
                      "code": true,
                      "text": "find"
                    },
                    {
                      "text": " 参数格式完全一致，只不过仅返回一条数据。在插入新数据时，先创建一个 "
                    },
                    {
                      "code": true,
                      "text": "ImageModel"
                    },
                    {
                      "text": " 实例，然后再调用 "
                    },
                    {
                      "code": true,
                      "text": "save"
                    },
                    {
                      "text": " 方法进行保存即可。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "2B9CqPZA63",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  0,
                  26
                ],
                [
                  41,
                  47
                ],
                [
                  59,
                  78
                ],
                [
                  90,
                  422
                ],
                [
                  439,
                  519
                ],
                [
                  567,
                  572
                ],
                [
                  606,
                  749
                ],
                [
                  775,
                  778
                ],
                [
                  790,
                  826
                ],
                [
                  843,
                  925
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "9nn5WmmDp1",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  0,
                  15
                ],
                [
                  23,
                  23
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": ".gitignore",
          "id": "W170Wpigot",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": ".gitignore",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  5,
                  6
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "server.js",
          "display": true,
          "id": "_wkH8ca4Sw",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后，我们需要在服务器刚刚运行时就连接好数据库，因此在 server.js 中添加如下代码："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "server.js",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  16,
                  17
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "FhqBPz84o4",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "edf67b5",
              "hiddenLines": [
                [
                  0,
                  127
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "到了这一步，我们运行 "
                },
                {
                  "code": true,
                  "text": "node server.js"
                },
                {
                  "text": " 运行服务器（确保 MongoDB 数据库已经在运行！），尝试上传图片，可以发现不仅能上传成功，还可以在首页看到新添加的图片了！"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "step",
      "commit": "c6687bf",
      "id": "ryyAVbxRYR",
      "articleId": "29f41c0",
      "children": [
        {
          "type": "heading-two",
          "commit": "c6687bf",
          "id": "X46u7MIqLg",
          "fixed": true,
          "children": [
            {
              "text": "实现评论功能"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "类似地，我们进一步实现网站的评论功能。按照 MVC 模式，我们将依次实现评论的模型（M）、视图（V）和控制器（C）。"
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "models/comment.js",
          "display": true,
          "id": "eEiNNrmWZY",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先，仿照 models/image.js，我们实现评论的数据模型："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "models/comment.js",
              "commit": "c6687bf",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "code": true,
                      "text": "CommentSchema"
                    },
                    {
                      "text": " 有两个字段需要补充说明一下："
                    }
                  ]
                },
                {
                  "type": "bulleted-list",
                  "children": [
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "image_id"
                        },
                        {
                          "text": "：由于图片和评论是一对多的关系（即一张图片包括多个评论），因此我们需要在记录每个评论所属的图片，即通过 "
                        },
                        {
                          "code": true,
                          "text": "image_id"
                        },
                        {
                          "text": " 字段进行记录；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "gravatar"
                        },
                        {
                          "text": "：用 MD5 对电子邮箱加密后得到的字符串，用于访问 "
                        },
                        {
                          "link": true,
                          "url": "https://gravatar.com",
                          "text": "Gravatar"
                        },
                        {
                          "text": " 服务。Gravatar 提供了跨网站的头像服务，如果你在集成了 Gravatar 服务的网站通过邮箱注册并上传了头像，那么别的网站也可以通过 Gravatar 访问你的头像。这里请通过 "
                        },
                        {
                          "code": true,
                          "text": "npm install md5"
                        },
                        {
                          "text": " 安装 MD5 加密的包。"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "views/image.handlebars",
          "display": true,
          "id": "YsI5HTz9Xg",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们对评论有关的界面代码进行细微的调整，将提交按钮的 "
                    },
                    {
                      "code": true,
                      "text": "type"
                    },
                    {
                      "text": " 从 "
                    },
                    {
                      "code": true,
                      "text": "button"
                    },
                    {
                      "text": " 改为 "
                    },
                    {
                      "code": true,
                      "text": "submit"
                    },
                    {
                      "text": "："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "views/image.handlebars",
              "commit": "c6687bf",
              "hiddenLines": [
                [
                  0,
                  60
                ],
                [
                  69,
                  90
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/image.js",
          "display": true,
          "id": "Hio3DeQ1PJ",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后是评论有关的 controller 代码。包括在 "
                    },
                    {
                      "code": true,
                      "text": "image.comment"
                    },
                    {
                      "text": " 中实现创建评论，以及在 "
                    },
                    {
                      "code": true,
                      "text": "image.index"
                    },
                    {
                      "text": " 中实现对单张图片所有评论的查询："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "c6687bf",
              "hiddenLines": [
                [
                  8,
                  16
                ],
                [
                  35,
                  63
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "查询与创建评论的代码和之前操作图片的代码大部分都是一致的，最大的差别在于查询时需要根据所属的图片 ID，创建时需要记录图片的 ID。这里我们约定使用 MongoDB 为每一条数据默认创建的 "
                    },
                    {
                      "code": true,
                      "text": "_id"
                    },
                    {
                      "text": " 字段。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "NXfFln6uOO",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "c6687bf",
              "hiddenLines": [
                [
                  0,
                  102
                ],
                [
                  114,
                  202
                ],
                [
                  214,
                  427
                ],
                [
                  439,
                  447
                ],
                [
                  464,
                  950
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "pqVjU1Gua_",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "c6687bf",
              "hiddenLines": [
                [
                  0,
                  13
                ],
                [
                  21,
                  24
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "lONAXHPOw4",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "c6687bf",
              "hiddenLines": [
                [
                  0,
                  138
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "step",
      "commit": "1511fae",
      "id": "PLj5mrWZAS",
      "articleId": "29f41c0",
      "children": [
        {
          "type": "heading-two",
          "commit": "1511fae",
          "id": "670h4fOSUA",
          "fixed": true,
          "children": [
            {
              "text": "实现图片的点赞和删除"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "这一步中，我们将实现图片的点赞和删除。"
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/image.js",
          "display": true,
          "id": "eKdlvIUPM_",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "首先在控制器中添加点赞和删除的代码："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "1511fae",
              "hiddenLines": [
                [
                  0,
                  59
                ],
                [
                  101,
                  117
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "在两个控制器中，我们都按照"
                    },
                    {
                      "italic": true,
                      "bold": true,
                      "text": "查询->修改->保存"
                    },
                    {
                      "text": "的流程进行操作。不过在删除图片中，我们不仅先删除上传图片，再删除了此图片所有的评论模型，最后再删除数据库中的图片模型，这一切通过 "
                    },
                    {
                      "code": true,
                      "text": "Model.remove"
                    },
                    {
                      "text": " 方法都可以轻松实现。"
                    },
                    {
                      "code": true,
                      "text": "remove"
                    },
                    {
                      "text": " 的使用方法与之前的 "
                    },
                    {
                      "code": true,
                      "text": "find"
                    },
                    {
                      "text": " 几乎一模一样，只不过 "
                    },
                    {
                      "code": true,
                      "text": "find"
                    },
                    {
                      "text": " 会返回符合条件的结果，而 "
                    },
                    {
                      "code": true,
                      "text": "remove"
                    },
                    {
                      "text": " 则会直接将符合条件的记录从数据库中删除。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "server/routes.js",
          "display": true,
          "id": "ChMeaAwMjV",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们在路由模块 server/routes.js 中添加刚刚写好的 "
                    },
                    {
                      "code": true,
                      "text": "image.remove"
                    },
                    {
                      "text": " 控制器："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "server/routes.js",
              "commit": "1511fae",
              "hiddenLines": [
                [
                  0,
                  11
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "KJ-Bsmo1L0",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "1511fae",
              "hiddenLines": [
                [
                  0,
                  156
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "views/layouts/main.handlebars",
          "display": true,
          "id": "nWDRsDZZnI",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "如果你尝试运行网站，你会发现点击点赞和删除按钮并没有什么用。因此，我们选用 jQuery 来实现前端界面向服务器发起点赞和删除的请求。在布局文件中添加 jQuery 的静态链接，以及相应的 jQuery 代码（如果不熟悉 jQuery 也不必过于纠结，直接复制粘贴就行了）："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "views/layouts/main.handlebars",
              "commit": "1511fae",
              "hiddenLines": [
                [
                  0,
                  27
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "再尝试运行网站，可以看到点赞和删除功能都已经实现了！只不过侧边栏的所有数据都没有同步更新，我们将在下一步中进行完善。"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "step",
      "commit": "6231494",
      "id": "XFOdugmJCh",
      "articleId": "29f41c0",
      "children": [
        {
          "type": "heading-two",
          "commit": "6231494",
          "id": "xfvOJoP7AH",
          "fixed": true,
          "children": [
            {
              "text": "完善用户界面"
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "终于来到教程的最后一步！我们将实现侧边栏中所有容器（统计数据、最受欢迎图片和最新评论）的数据同步。先创建 helpers 目录，用于存放侧边栏数据获取的相关代码。然后分析一下数据同步逻辑（例如统计数据），我们发现要进行的查询非常多：图片总数、评论总数、图片所有的访问量、图片所有的点赞数。如果按照普通的写法，我们也许会这样写："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "javascript",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "queryA(function(err, resultsA) {"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "  queryB(function(err, resultsB) {"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "    queryC(function(err, resultsC) {"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "      queryD(function(err, resultsD) {"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "        // some code ..."
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "      }"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "    }"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "  }"
                    }
                  ]
                },
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "}"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "这样的代码不仅十分丑陋，难以维护（即大家常说的“回调地狱”），而且性能也十分糟糕——所有查询都是链式执行。但其实所有的查询都是相互独立的，完全可以并发进行，那我们应该怎么写呢？"
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "答案就是 "
                },
                {
                  "link": true,
                  "url": "http://caolan.github.io/async/",
                  "text": "async"
                },
                {
                  "text": " 库。async 是在 ECMAScript 6 的 Promise 体系出现之前最流行的异步组件库，凭借其强大的性能、丰富且设计良好的接口成为 Node 和前端开发中解决异步的最佳选择之一。这里我们也用 async 来解决并发获取数据的问题。安装 async 包："
                }
              ]
            },
            {
              "type": "code-block",
              "lang": "bash",
              "children": [
                {
                  "type": "code-line",
                  "children": [
                    {
                      "text": "$ npm install async"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "helpers/stats.js",
          "display": true,
          "id": "lKYk4oX9St",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后创建 helpers/stats.js，用于获取网站统计数据："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "helpers/stats.js",
              "commit": "6231494",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "这里我们用到了 "
                    },
                    {
                      "code": true,
                      "text": "async.parallel"
                    },
                    {
                      "text": " 接口，它接受两个参数："
                    }
                  ]
                },
                {
                  "type": "bulleted-list",
                  "children": [
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "tasks"
                        },
                        {
                          "text": "：一个函数数组，每个函数对应一个异步任务（所有任务将并发执行），并且接受一个回调函数用于返回任务执行的结果；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "callback"
                        },
                        {
                          "text": "：整个任务组的回调函数，可以获取所有异步任务执行完成后的所有结果。"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们将四个数据查询任务包装成四个函数作为 "
                    },
                    {
                      "code": true,
                      "text": "async.parallel"
                    },
                    {
                      "text": " 的第一个参数，在最后的 "
                    },
                    {
                      "code": true,
                      "text": "callback"
                    },
                    {
                      "text": " 中返回所有查询结果。非常简洁、优雅。"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "helpers/images.js",
          "display": true,
          "id": "0itgIAeUl3",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "接下来实现侧边栏中的最新图片模块，一个简单的数据库查询即可："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "helpers/images.js",
              "commit": "6231494",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "helpers/comments.js",
          "display": true,
          "id": "Z1V8E7Ji_Z",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "然后是创建获取最新评论的代码。不过简单地查询评论模型是不够的，我们还需要获取到每个评论对应的图片，这时候用 "
                    },
                    {
                      "code": true,
                      "text": "async.each"
                    },
                    {
                      "text": " 函数对一个数组中所有对象进行异步操作最为合适不过。整个模块的代码如下："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "helpers/comments.js",
              "commit": "6231494",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "code": true,
                      "text": "async.each"
                    },
                    {
                      "text": " 函数接受的三个参数如下："
                    }
                  ]
                },
                {
                  "type": "bulleted-list",
                  "children": [
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "collection"
                        },
                        {
                          "text": "：用于接收异步操作的集合，这里是评论集；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "iteratee"
                        },
                        {
                          "text": "：异步操作函数，这里是 "
                        },
                        {
                          "code": true,
                          "text": "attachImage"
                        },
                        {
                          "text": " 函数；"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    },
                    {
                      "type": "list-item",
                      "children": [
                        {
                          "code": true,
                          "text": "callback"
                        },
                        {
                          "text": "：全部操作执行完成的回调函数。"
                        }
                      ],
                      "parent": "bulleted-list",
                      "level": 0
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "helpers/sidebar.js",
          "display": true,
          "id": "7t9uLlRwqa",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "我们将前面三个 helper 函数放到一起，创建一个 sidebar 模块，并发获取三个模块的数据。这里我们还是用 "
                    },
                    {
                      "code": true,
                      "text": "async.parallel"
                    },
                    {
                      "text": " 函数，因为三个模块本质上也是异步查询："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "helpers/sidebar.js",
              "commit": "6231494",
              "hiddenLines": [],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "并发的异步操作层层嵌套，是不是很炫酷呢？"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/home.js",
          "display": true,
          "id": "nNNYb-aeUF",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "最后将我们炫酷的 sidebar 模块用到 home 和 image 控制器中："
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/home.js",
              "commit": "6231494",
              "hiddenLines": [
                [
                  4,
                  6
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "controllers/image.js",
          "display": true,
          "id": "zLOA4mrrY_",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "controllers/image.js",
              "commit": "6231494",
              "hiddenLines": [
                [
                  7,
                  25
                ],
                [
                  36,
                  120
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package.json",
          "display": false,
          "id": "bPh1PPxVSG",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package.json",
              "commit": "6231494",
              "hiddenLines": [
                [
                  0,
                  8
                ],
                [
                  16,
                  25
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "package-lock.json",
          "id": "AWLtnu6AdK",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "package-lock.json",
              "commit": "6231494",
              "hiddenLines": [
                [
                  0,
                  27
                ],
                [
                  43,
                  576
                ],
                [
                  591,
                  961
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "file",
          "file": "tuture.yml",
          "id": "hwNm92Veqf",
          "children": [
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "diff-block",
              "file": "tuture.yml",
              "commit": "6231494",
              "hiddenLines": [
                [
                  0,
                  169
                ]
              ],
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            },
            {
              "type": "explain",
              "fixed": true,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "explain",
          "fixed": true,
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "侧边栏的所有数据都能够同步更新，我们的网站也基本完成了！"
                }
              ]
            },
            {
              "type": "note",
              "level": "primary",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "text": "此教程属于"
                    },
                    {
                      "link": true,
                      "url": "https://tuture.co/roadmaps/node/",
                      "text": "Node.js 后端工程师学习路线"
                    },
                    {
                      "text": "的一部分，点击可查看全部内容。"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "version": "v1",
  "remotes": [
    {
      "name": "origin",
      "refs": {
        "fetch": "git@github.com:mRcfps/Instagrammy.git",
        "push": "git@github.com:mRcfps/Instagrammy.git"
      }
    }
  ]
}